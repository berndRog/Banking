{
  "openapi": "3.0.1",
  "info": {
    "title": "Banking API",
    "description": "Übersicht über Bankkonten und Überweisungen.",
    "version": "v2"
  },
  "paths": {
    "/banking/v2/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get all accounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/banking/v2/owners/{ownerId}/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get all accounts of a given ownerId",
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "Unique ownerId of the existing owner",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create a new account for a given ownerId",
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "Unique ownerId of the existing owner",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "AccountDto with the new account's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get an account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the account to be found",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/iban/{iban}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get an account by Iban",
        "parameters": [
          {
            "name": "iban",
            "in": "path",
            "description": "Unique iban of the account to be found",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/owners/{ownerId}/accounts/{id}": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete an account with given id and with a given ownerId",
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "Unique ownerId of the existing owner",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the existing account",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/beneficiaries": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get all beneficiaries",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountId}/beneficiaries": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get beneficiaries of an account by accountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BeneficiaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/banking/v2/beneficiaries/{id}": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get a beneficiary by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeneficiaryDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/beneficiaries/name/{name}": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get beneficiaries name, SQL like %name%",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeneficiaryDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/beneficiaries/iban/{iban}": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Get a beneficiary by Iban",
        "parameters": [
          {
            "name": "iban",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeneficiaryDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountDebitId}/beneficiaries": {
      "post": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Create a new beneficiary",
        "parameters": [
          {
            "name": "accountDebitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeneficiaryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BeneficiaryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountId}/beneficiaries/{id}": {
      "delete": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "Delete a benfificary with given id and with a given accountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/owners": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Get all owners",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OwnerDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Create a new owner",
        "requestBody": {
          "description": "OwnerDto with the new owner's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/owners/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Get an owner by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the owner to be found",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Create an owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the existing owner",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "OwnerDto with the updated owner's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Delete an owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the existing owner",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/owners/name": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Get owners by name with SQL like %name%",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the owner to be found with SQL like %name%",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OwnerDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountId}/transactions/listitems": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transactionListItemDtos of an account by accountId and time intervall start to end",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Unique accountId of the account for which we want to filter transactions",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start date of the time intervall in ISO 8601 format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date of the time intervall in ISO 8601 format",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionListItemDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionListItemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountId}/transactions/filter": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transactions for an account  by accountId and time intervall start to end",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get a transaction by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/transfers": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get all transfers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountId}/transfers": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get transfers of an account by accountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Send Money: create a transfer with two transactions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/transfers/{id}": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get transfer by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/banking/v2/accounts/{accountId}/transfers/reverse/{originalTransferId}": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Reverse Money: create a transfer with two transactions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "originalTransferId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountDto": {
        "required": [
          "id",
          "iban",
          "balance",
          "ownerId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "iban": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BeneficiaryDto": {
        "required": [
          "id",
          "name",
          "iban",
          "accountId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "OwnerDto": {
        "required": [
          "id",
          "name",
          "birthdate",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "birthdate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TransactionDto": {
        "required": [
          "id",
          "date",
          "amount",
          "accountId",
          "transferId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "accountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "transferId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "TransactionListItemDto": {
        "required": [
          "id",
          "date",
          "amount",
          "description",
          "name",
          "iban",
          "accountId",
          "transferId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "transferId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "TransferDto": {
        "required": [
          "id",
          "date",
          "description",
          "amount",
          "accountId",
          "beneficiaryId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "beneficiaryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Beneficiaries"
    },
    {
      "name": "Owners"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Transfers"
    }
  ]
}